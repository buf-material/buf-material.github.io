<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Github | My Octopress Blog]]></title>
  <link href="http://yoursite.com/blog/categories/github/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2014-12-15T18:10:23+09:00</updated>
  <id>http://yoursite.com/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Githubが公開しているgitコマンドのラッパーであるhubをインストールする]]></title>
    <link href="http://yoursite.com/blog/2014/12/14/install-hub/"/>
    <updated>2014-12-14T23:03:04+09:00</updated>
    <id>http://yoursite.com/blog/2014/12/14/install-hub</id>
    <content type="html"><![CDATA[<h2>インストール</h2>

<ul>
<li>refs <a href="https://github.com/github/hub">https://github.com/github/hub</a></li>
</ul>


<pre><code>cd /tmp
git clone https://github.com/github/hub.git
cd hub/
./script/build
cp hub /usr/local/bin/
</code></pre>

<h3>gitコマンドをhubコマンドのエイリアスとする</h3>

<ul>
<li>いつもの<code>git</code>コマンドを<code>hub</code>コマンドに置き換える</li>
</ul>


<pre><code class="sh">cat &lt;&lt; EOT &gt;&gt; ~/.bash_profile
eval "$(hub alias -s)"
EOT

source ~/.bash_profile
</code></pre>

<h2>動作確認</h2>

<p><code>which git</code>を実行すると<code>git</code>コマンドの実体は<code>/usr/local/bin/hub</code>であることが分かります。</p>

<pre><code class="sh"># which git
alias git='hub'
        /usr/local/bin/hub
</code></pre>

<p><code>git</code>と実行した時にgithub関連のサブコマンドが追加されてます。</p>

<pre><code class="sh"># git

 .
 .
 .

GitHub Commands:
   pull-request   Open a pull request on GitHub
   fork           Make a fork of a remote repository on GitHub and add as remote
   create         Create this repository on GitHub and add GitHub as origin
   browse         Open a GitHub page in the default browser
   compare        Open a compare page on GitHub
   release        List or create releases (beta)
   issue          List or create issues (beta)
   ci-status      Show the CI status of a commit

See 'git help &lt;command&gt;' for more information on a specific command.
</code></pre>

<h2>bash-completion用のシェルスクリプトを配置</h2>

<pre><code class="sh">wget -O /etc/bash_completion.d/hub https://raw.githubusercontent.com/github/hub/master/etc/hub.bash_completion.sh
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[herokuとGitHubにデプロイする時にパスワードやキー情報を隠したい時の対処方法]]></title>
    <link href="http://yoursite.com/blog/2014/10/07/hidden-key-on-rails-for-heroku/"/>
    <updated>2014-10-07T14:45:31+09:00</updated>
    <id>http://yoursite.com/blog/2014/10/07/hidden-key-on-rails-for-heroku</id>
    <content type="html"><![CDATA[<p>Rails4でアプリケーションを作って、<a href="https://www.heroku.com/home">heroku</a>にデプロイした！</p>

<p>もちろん<a href="https://bitbucket.org/">Bitbucket</a>でも構わないが、せっかく作ったコードなので公開したい！</p>

<p>でも、<code>config/database.yml</code>の<code>password</code>情報や<code>APIのKey</code>情報なんかをベタ書きしていると他の人に見られてしまう！</p>

<p><strong>そんな時は環境変数を使いましょう！！</strong></p>

<h2 class="text-warning">見られたくない情報を環境変数に書き換える</h2>


<p><a href="http://buf-material-gmap-place-sample.herokuapp.com/" target="_blank"><a href="http://buf-material-gmap-place-sample.herokuapp.com/">http://buf-material-gmap-place-sample.herokuapp.com/</a></a>なんかでは、<code>Google place API</code>を利用するために<code>Google API KEY</code>を必要とするコードがあります。その箇所を以下のように書き換えます。</p>

<pre><code class="ruby">    @client = GooglePlaces::Client.new( ENV['GOOGLE_API_KEY'] )
</code></pre>

<p>ミソは<code>ENV['GOOGLE_API_KEY']</code>ですね。こういう感じで環境変数化してしまいます。</p>

<h2 class="text-warning">herokuに環境変数をセットする</h2>


<p><code>heroku config:set</code>コマンドを使用することでheroku上で環境変数をセットすることが出来ます。</p>

<p><code>XXXXXXXXXXXXXXXXXXXXXXXX</code>の箇所に実際のKey情報をセットします。また、<code>--app [heroku上のアプリケーション名]</code>も必要です。</p>

<pre><code class="sh">heroku config:set GOOGLE_API_KEY="XXXXXXXXXXXXXXXXXXXXXXXX" --app buf-material-gmap-place-sample
</code></pre>
]]></content>
  </entry>
  
</feed>
