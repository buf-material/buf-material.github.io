<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2014-09-21T13:03:19+09:00</updated>
  <id>http://yoursite.com/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OctopressにGoogle AdSenseを導入する]]></title>
    <link href="http://yoursite.com/blog/2014/09/18/setting-google-adsense-octopress/"/>
    <updated>2014-09-18T15:27:28+09:00</updated>
    <id>http://yoursite.com/blog/2014/09/18/setting-google-adsense-octopress</id>
    <content type="html"><![CDATA[<h2>Google AdSenseとは</h2>

<p>広告収入を稼ぐためのアフィリエイトサービスと言えばいいのでしょうか。</p>

<p>詳細は、<a href="https://www.google.com/adsense/">Google AdSense</a>について<a href="http://ja.wikipedia.org/wiki/Google_AdSense">wikipedia</a>から転記します。</p>

<pre><code>### http://ja.wikipedia.org/wiki/Google_AdSense から転記

Google AdSense（グーグルアドセンス）はGoogleの提供している検索連動型およびコンテンツ連動型広告の広告配信サービスの総称である。

AdSenseは、Googleが広告ネットワークに対して提供する配信サービスの総称であり、その形態は多岐にわたる。
コンテンツ向けAdSenseは所有するWebサイト（ブログでも可）にGoogle AdSenseの広告コードを貼り付けると広告が表示され、その広告がクリックされると報酬が得られる仕組みである。Google AdSenseのシステムが自動的にサイトの内容を解析し、そのサイトにあったコンテンツ連動型広告を配信するシステムである[1]。例えば、ゴルフ関連のサイトなら、自動的にゴルフの広告が表示されるよう設計されている(サイトの内容によっては、それと関連する適切な広告がなく、まったく分野の異なる広告が表示されることもある)。Googleでの検索履歴から広告が表示されることもある[2]。 日本では2003年12月一般向けに募集を開始[3]したことでブロガーなどに広まり急速にシェアを広げた。
その他、ウェブページ内に検索の機能を提供し、検索キーワードに関連する広告を表示する検索向けAdSense、RSSフィードの記事内にAdSense広告を自動的に表示するフィード向けAdSense[4]などがある。
</code></pre>


<p><br>
ということで、<a href="https://www.google.com/adsense/">Google AdSense</a>を使用してOctopressサイト内に広告を表示してみようと思います。</p>

<h2>Google AdSense側の設定</h2>

<h3>所有サイトのURLを追加する(任意)</h3>

<p><strong>所有サイト</strong>としてサイトのURLを登録しておくことでサイト固有の広告ブロック ルールを作成するなど、サイトに関連する操作を行うことができるようになるようです。具体的には、特定広告主URLや広告ネットワーク、特定カテゴリに関わる広告を表示させたくない場合等に非表示設定をおこなうことが可能です。</p>

<p><img src="http://yoursite.com/images/google_adsense_02.jpg" alt="" /></p>

<p><a href="https://www.google.com/adsense/">Google AdSense</a>へGoogleアカウントにてログインし、<strong>アカウント > サイト管理</strong>の順にページを移動します。</p>

<p>下の画像のようなテキスト入力フォームがあるので、広告を表示させたいサイトのトップURLを入力し、<strong>サイトを追加</strong>します。</p>

<p><img src="http://yoursite.com/images/google_adsense_01.jpg" alt="" /></p>

<h3>広告ユニットを作成し、コードを取得する</h3>

<p>Google AdSenseにおける広告は広告タイプ(テキスト広告とディスプレイ広告、テキスト広告のみ、ディスプレイ広告のみ)や広告サイズ(468x60、160x600、レスポンシブ、など)を定義した<strong>広告ユニット</strong>が広告の生成単位となり、広告コードもこの<strong>広告ユニット</strong>単位で生成されます。</p>

<p>サイドバー向けの広告ユニットを作成します。</p>

<p>[広告の設定] > [コンテンツ] > [広告ユニット]までページを進め、<strong>＋新しい広告ユニット</strong>をクリックします。
 <img src="http://yoursite.com/images/google_adsense_04.jpg" alt="" /></p>

<p><br>
名前は、あとで広告ユニットを特定しやすいように一意の名前と説明を入力するといいでしょう。
今回は<code>buf-material_aside_336x280</code>とします。</p>

<p>広告サイズは最初に表示されている<strong>推奨</strong>から選ぶと無難かもしれません。これら推奨の広告サイズはGoogle AdSense側で広告の掲載効果があったとされる広告サイズのようです。今回は<code>336x280 レクタングル (大)</code>を選択します。</p>

<p>また、モバイルで効果的な広告サイズにはモバイルのアイコン（<img src="//storage.googleapis.com/support-kms-prod/SNP_E2D5EEDDCF0F04F7FDDA2775FC774BEA6061_6002584_en_v0" height="auto" alt="mobile icon" title="mobile icon">）が表示されます。</p>

<p>広告サイズに関しては、<code>プレビュー</code>を選択することでポップアップで実際の大きさを確認できますので参考に出来ますね。</p>

<p><br>
広告タイプは、<code>テキスト広告とディスプレイ広告</code>、<code>テキスト広告のみ</code>、<code>ディスプレイ広告のみ</code>の3つから選択します。今回は推奨されている<code>テキスト広告とディスプレイ広告</code>を選択します。</p>

<p><br>
<img src="http://yoursite.com/images/google_adsense_03.jpg" alt="" />
<br></p>

<p><code>保存してコードを取得</code>を選択し、コードを取得します。</p>

<h2>Octopress側の設定</h2>

<p>今回は、広告をサイドバーに表示してみようと思います。</p>

<p>Octopressではサイドバーのコンテンツはセクションごとに<code>source/_includes/custom/asides/</code>ディレクトリ以下にHTMLファイルを用意し、<code>_config.yml</code>内の<code>default_asides:</code>に表示させたいファイル名をリストで持つことになっています。</p>

<h3>サイドバーに表示するHTMLの準備</h3>

<p><code>source/_includes/custom/asides/google_adsense_336x280.html</code>として作成します。この時、Octopress側で1つのセクションであることを定義するために一番外枠として<code>&lt;section&gt;と&lt;/section&gt;</code>で括るようにします。</p>

<figure class='code'><figcaption><span>source/_includes/custom/asides//google_adsense_336x280.html </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;section&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">async</span> <span class="na">src=</span><span class="s">&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="c">&lt;!-- buf-material_aside_336x280 --&gt;</span>
</span><span class='line'><span class="nt">&lt;ins</span> <span class="na">class=</span><span class="s">&quot;adsbygoogle&quot;</span>
</span><span class='line'>     <span class="na">style=</span><span class="s">&quot;display:inline-block;width:336px;height:280px&quot;</span>
</span><span class='line'>     <span class="na">data-ad-client=</span><span class="s">&quot;ca-pub-XXXXXXXXXXXXXXXX&quot;</span>
</span><span class='line'>     <span class="na">data-ad-slot=</span><span class="s">&quot;XXXXXXXXXX&quot;</span><span class="nt">&gt;&lt;/ins&gt;</span>
</span><span class='line'><span class="nt">&lt;script&gt;</span>
</span><span class='line'><span class="p">(</span><span class="nx">adsbygoogle</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">adsbygoogle</span> <span class="o">||</span> <span class="p">[]).</span><span class="nx">push</span><span class="p">({});</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>_config.yml の設定</h3>

<p><code>_config.yml</code>の<code>default_asides:</code>に<code>google_adsense_336x280.html</code>を追記します。この広告はサイドバーの最上段に表示させたいので、<code>default_asides:</code>リストの1番上に記述します。</p>

<figure class='code'><figcaption><span>_config.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">default_asides</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span>
</span><span class='line'>    <span class="nv">custom/asides/google_adsense_336x280.html</span><span class="p-Indicator">,</span>
</span><span class='line'>    <span class="nv">asides/recent_posts.html</span><span class="p-Indicator">,</span>
</span><span class='line'>    <span class="nv">custom/asides/category_list.html</span><span class="p-Indicator">,</span>
</span><span class='line'>    <span class="nv">custom/asides/tag_cloud.html</span><span class="p-Indicator">,</span>
</span><span class='line'><span class="p-Indicator">]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>静的ファイルの再生成とデプロイ</h2>

<p>静的ファイルを再生成します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake generate
</span><span class='line'>
</span><span class='line'><span class="c">## ローカル環境で確認する場合はpreviewタスクも実行します</span>
</span><span class='line'>rake preview
</span></code></pre></td></tr></table></div></figure>


<p><code>GitHub Pages</code>へデプロイします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake deploy
</span></code></pre></td></tr></table></div></figure>


<h2>確認</h2>

<p><code>GitHub Pages</code>へアクセスした際に表示されるHTMLコードを確認し、<code>&lt;aside&gt;</code>タグ内に以下のscriptコードが組み込まれていれば設定できています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">section</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">async</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'><span class="c">&lt;!--</span> <span class="nx">buf</span><span class="o">-</span><span class="nx">material_aside_336x280</span> <span class="o">--&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">ins</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&quot;adsbygoogle&quot;</span>
</span><span class='line'>     <span class="nx">style</span><span class="o">=</span><span class="s2">&quot;display:inline-block;width:336px;height:280px&quot;</span>
</span><span class='line'>     <span class="nx">data</span><span class="o">-</span><span class="nx">ad</span><span class="o">-</span><span class="nx">client</span><span class="o">=</span><span class="s2">&quot;ca-pub-XXXXXXXXXXXXXXXX&quot;</span>
</span><span class='line'>     <span class="nx">data</span><span class="o">-</span><span class="nx">ad</span><span class="o">-</span><span class="nx">slot</span><span class="o">=</span><span class="s2">&quot;XXXXXXXXXX&quot;</span><span class="o">&gt;&lt;</span><span class="err">/ins&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
</span><span class='line'><span class="p">(</span><span class="nx">adsbygoogle</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">adsbygoogle</span> <span class="o">||</span> <span class="p">[]).</span><span class="nx">push</span><span class="p">({});</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/section&gt;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OctopressにGoogle Analyticsを導入する]]></title>
    <link href="http://yoursite.com/blog/2014/09/16/setting-google-alalytics-octopress/"/>
    <updated>2014-09-16T23:20:32+09:00</updated>
    <id>http://yoursite.com/blog/2014/09/16/setting-google-alalytics-octopress</id>
    <content type="html"><![CDATA[<h2>Google Analytics</h2>

<p><img src="http://yoursite.com/images/google_analytics_01.jpg" alt="" />
<br></p>

<p><a href="http://www.google.com/analytics/">Google Analytics</a>はGoogleが提供するアクセス解析ツールです。</p>

<p>サイトページ内に<a href="https://support.google.com/analytics/answer/1032385?hl=ja">トラッキングコード</a>と呼ばれるJavaScript コードを埋め込み、訪問者がサイトへアクセスした際の閲覧情報がGoogle Analyticsサーバへ送信される仕組みです。Webサーバのアクセスログ等を解析する等とは違い、開発者はこのトラッキングコードを埋め込むだけでアクセス解析ツールを利用できるという手軽さと、様々なアクセス情報を取得・閲覧できることが特徴です。</p>

<p>Octopressの場合、このトラッキングコードの大枠のコードがテーマのテンプレートHTMLファイルとして用意されているケースがあります。このような場合には<code>_config.yml</code>の<code>google_analytics_tracking_id:</code>という箇所に<a href="https://support.google.com/analytics/answer/1032385?hl=ja">トラッキング ID</a>を記述するだけです。</p>

<p>トラッキング IDとは<code>UA-000000-01</code>のような文字列で、データの送信先となるアカウントやプロパティを Google アナリティクス側で特定するためのIDです。</p>

<h2>トラッキングIDの取得</h2>

<p>先述したトラッキング IDを取得します。</p>

<p><a href="http://www.google.com/analytics/">Google Analytics</a>からGoogleアカウントでログインし、<code>アナリティクス設定 &gt; 管理 &gt; 新しいアカウント</code> の順にアクセスし、サイト情報を登録してトラッキングIDを取得します。</p>

<h2>取得したトラッキングIDを設定</h2>

<p><a href="http://octopress.org/">Octopress</a>では既にGoogle Analytics用のテンプレートHTMLが用意されているテーマもあり、デフォルトの<strong>Classic</strong>や先日変更した<strong>octostrap3</strong>でも同様です。</p>

<pre><code>### Octopress Themesに組み込まれているGoogle Analyticsテンプレート

octopress
└── .themes
    ├── octostrap3
    |   └── source
    |       └── _includes
    |           └── google_analytics.html
    |
    └── classic
        └── source
            └── _includes
                └── google_analytics.html

</code></pre>


<p>従って、設定は<code>_config.yml</code>の<code>google_analytics_tracking_id:</code>の項に先ほど取得したトラッキングIDを記述して静的ファイルを再生成するだけでいいようです。</p>

<figure class='code'><figcaption><span>_config.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">google_analytics_tracking_id</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">UA-54XXXXXX-1</span>
</span></code></pre></td></tr></table></div></figure>


<h2>静的ファイルの再生成とデプロイ</h2>

<p>静的ファイルを再生成します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake generate
</span><span class='line'>
</span><span class='line'><span class="c">## ローカル環境で確認する場合はpreviewタスクも実行します</span>
</span><span class='line'>rake preview
</span></code></pre></td></tr></table></div></figure>


<p><code>GitHub Pages</code>へデプロイします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake deploy
</span></code></pre></td></tr></table></div></figure>


<h2>確認</h2>

<p><code>GitHub Pages</code>へアクセスした際に表示されるHTMLコードを確認し、HEADタグ内に以下のscriptコードが組み込まれていれば設定できています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>   <span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="nx">i</span><span class="p">[</span><span class="s1">&#39;GoogleAnalyticsObject&#39;</span><span class="p">]</span><span class="o">=</span><span class="nx">r</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">r</span><span class="p">]</span><span class="o">||</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">q</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">q</span><span class="o">||</span><span class="p">[]).</span><span class="nx">push</span><span class="p">(</span><span class="nx">arguments</span><span class="p">)},</span><span class="nx">i</span><span class="p">[</span><span class="nx">r</span><span class="p">].</span><span class="nx">l</span><span class="o">=</span><span class="mi">1</span><span class="o">*</span><span class="k">new</span> <span class="nb">Date</span><span class="p">();</span><span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">o</span><span class="p">),</span>
</span><span class='line'>    <span class="nx">m</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">o</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span><span class="nx">a</span><span class="p">.</span><span class="nx">async</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="nx">m</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">m</span><span class="p">)</span>
</span><span class='line'>    <span class="p">})(</span><span class="nb">window</span><span class="p">,</span><span class="nb">document</span><span class="p">,</span><span class="s1">&#39;script&#39;</span><span class="p">,</span><span class="s1">&#39;//www.google-analytics.com/analytics.js&#39;</span><span class="p">,</span><span class="s1">&#39;ga&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">ga</span><span class="p">(</span><span class="s1">&#39;create&#39;</span><span class="p">,</span> <span class="s1">&#39;UA-54XXXXXX-1&#39;</span><span class="p">,</span> <span class="s1">&#39;auto&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">ga</span><span class="p">(</span><span class="s1">&#39;send&#39;</span><span class="p">,</span> <span class="s1">&#39;pageview&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Google Analyticsのアクセス解析結果が表示させるまで24時間程度かかるので表示されるのを待ちましょう。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressのテーマをclassicからoctostrap3に変更してみる]]></title>
    <link href="http://yoursite.com/blog/2014/09/02/customize-octopress-themes-from-classic-to-octostrap3/"/>
    <updated>2014-09-02T19:50:02+09:00</updated>
    <id>http://yoursite.com/blog/2014/09/02/customize-octopress-themes-from-classic-to-octostrap3</id>
    <content type="html"><![CDATA[<h2>デフォルトテーマ</h2>

<p>Octopressではデザインテーマを<code>install</code>タスクにてインストールします。デフォルトでインストールされるテーマは<strong>classic</strong>です。</p>

<p><img src="http://yoursite.com/images/octopress_test_page.jpg" alt="" /></p>

<h2>installタスクの動作を理解する</h2>

<p>Octopressでテーマを適用する<code>install</code>タスクの動作を見てみようと思います。</p>

<p>下記コードはOctopressの<code>Rakefile</code>に記述された<code>install</code>タスクです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">task</span> <span class="ss">:install</span><span class="p">,</span> <span class="ss">:theme</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="p">,</span> <span class="n">args</span><span class="o">|</span>
</span><span class='line'>  <span class="k">if</span> <span class="no">File</span><span class="o">.</span><span class="n">directory?</span><span class="p">(</span><span class="n">source_dir</span><span class="p">)</span> <span class="o">||</span> <span class="no">File</span><span class="o">.</span><span class="n">directory?</span><span class="p">(</span><span class="s2">&quot;sass&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">abort</span><span class="p">(</span><span class="s2">&quot;rake aborted!&quot;</span><span class="p">)</span> <span class="k">if</span> <span class="n">ask</span><span class="p">(</span><span class="s2">&quot;A theme is already installed, proceeding will overwrite existing files. Are you sure?&quot;</span><span class="p">,</span> <span class="o">[</span><span class="s1">&#39;y&#39;</span><span class="p">,</span> <span class="s1">&#39;n&#39;</span><span class="o">]</span><span class="p">)</span> <span class="o">==</span> <span class="s1">&#39;n&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="c1"># copy theme into working Jekyll directories</span>
</span><span class='line'>  <span class="n">theme</span> <span class="o">=</span> <span class="n">args</span><span class="o">.</span><span class="n">theme</span> <span class="o">||</span> <span class="s1">&#39;classic&#39;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;## Copying &quot;</span><span class="o">+</span><span class="n">theme</span><span class="o">+</span><span class="s2">&quot; theme into ./</span><span class="si">#{</span><span class="n">source_dir</span><span class="si">}</span><span class="s2"> and ./sass&quot;</span>
</span><span class='line'>  <span class="n">mkdir_p</span> <span class="n">source_dir</span>
</span><span class='line'>  <span class="n">cp_r</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">themes_dir</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">theme</span><span class="si">}</span><span class="s2">/source/.&quot;</span><span class="p">,</span> <span class="n">source_dir</span>
</span><span class='line'>  <span class="n">mkdir_p</span> <span class="s2">&quot;sass&quot;</span>
</span><span class='line'>  <span class="n">cp_r</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">themes_dir</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">theme</span><span class="si">}</span><span class="s2">/sass/.&quot;</span><span class="p">,</span> <span class="s2">&quot;sass&quot;</span>
</span><span class='line'>  <span class="n">mkdir_p</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">source_dir</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">posts_dir</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">mkdir_p</span> <span class="n">public_dir</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>コードを見ても分かる通り、installタスクで実行していることは以下の6つの事だけで、とてもシンプルな動作です。<code>#{theme}</code>はデフォルトでは<strong>classic</strong>が代入される変数です(上記コードの6行目)。</p>

<ol>
<li><code>source</code>ディレクトリを作成</li>
<li><code>.themes/#{theme}/source</code>ディレクトリ以下のファイルやディレクトリを再帰的に<code>source</code>ディレクトリにコピー</li>
<li><code>sass</code>ディレクトリを作成</li>
<li><code>.themes/#{theme}/sass</code>ディレクトリ以下のファイルやディレクトリを再帰的に<code>sass</code>ディレクトリにコピー</li>
<li><code>source/_posts</code>ディレクトリを作成</li>
<li><code>public</code>ディレクトリを作成</li>
</ol>


<h2>テーマのインストール</h2>

<p>テーマのインストールに必要な作業は以下の3つだけです。</p>

<ol>
<li><code>.themes</code>ディレクトリ以下にインストールしたいテーマをプロジェクトごとコピーする

<ul>
<li><code>.themes/octostrap3/</code>のようになる</li>
</ul>
</li>
<li>installタスクをインストールしたいテーマを明示して実行する

<ul>
<li><code>rake 'install[octostrap3]'</code>のようになる</li>
</ul>
</li>
<li><code>generate</code>タスクを実行して静的ファイルを生成する</li>
</ol>


<h2>octostrap3テーマをインストールする</h2>

<p>今回は<a href="https://github.com/kAworu/octostrap3">Octostrap3</a>をテーマとしてインストールしてみます。</p>

<h4>octostrap3プロジェクトを<code>.themes</code>ディレクトリ以下にcloneしてきます。</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git clone https://github.com/kAworu/octostrap3 .themes/octostrap3
</span></code></pre></td></tr></table></div></figure>


<p><code>.themes</code>ディレクトリ以下はこのようなディレクトリ構成になるはずです。</p>

<pre><code>### octostrap3テーマをローカル環境にcloneした状態
octopress
└── .themes/
    ├── classic
    └── octostrap3
</code></pre>


<h4>Octopressのinstallタスクをテーマを指定して実行</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake <span class="s1">&#39;install[octostrap3]&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Octopressのgenerateタスクを実行して静的コンテンツを生成</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake generate
</span></code></pre></td></tr></table></div></figure>


<p><br>
これでサイトのデザインテーマを<code>octostrap3</code>に変更できました！</p>

<p><img src="http://yoursite.com/images/customize-octopress-themes_01.jpg" alt="" /></p>

<p><br></p>

<h3><code>と思ったらサイドサイドメニューのoctopress-tagcloud プラグインで生成されているulタグのデザインがoctostrap3に合っていない...</code></h3>

<p><img src="http://yoursite.com/images/customize-octopress-themes_02.jpg" alt="" /></p>

<p><br>
これは<a href="https://github.com/tokkonopapa/octopress-tagcloud">octopress-tagcloud</a>プラグインをインストールした際に置いたテンプレートファイルの書き方を修正することで対応できます。</p>

<h2>octopress-tagcloud プラグイン向けのHTMLテンプレートファイルを修正</h2>

<p>プラグインを利用してコンテンツを生成している場合、<code>source/_includes/custom/asides</code>ディレクトリ以下にコンテンツ生成用のHTMLテンプレートファイルを配置していると思います。</p>

<p>今回、デザインテンプレートを<code>classic</code>から<code>octostrap3</code>に変更したので、追加したテンプレートファイルの<code>div</code>などのブロック構成、<code>class</code>や<code>id</code>などのデザインに関わるコードも<code>octostrap3</code>のデザインに合う様に修正しようと思います。</p>

<p>ちょうど、<a href="https://github.com/kAworu/octostrap3">octostrap3</a>のブログページに<a href="http://kaworu.github.io/octopress/blog/2013/10/03/category-list-aside/">Category List Aside</a>という記事でサイドメニューにカテゴリーリストを追加するためのテンプレートコードが掲載されていましたのでそのまま利用させて頂きます。</p>

<h3>修正対象ファイル</h3>

<p>以下のディレクトリツリーにある2つのHTMLファイルを修正します。</p>

<pre><code>### octostrap3導入にあたって修正するテンプレートファイルのパス
octopress
└── source/
    └── _includes
        └── custom
            └── asides
                ├── category_list.html
                └── tag_cloud.html
</code></pre>


<h3>修正</h3>

<h5>source/_includes/custom/asides/category_list.html</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&lt;section <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;panel panel-default&quot;</span>&gt;
</span><span class='line'>  &lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;panel-heading&quot;</span>&gt;
</span><span class='line'>    &lt;h3 <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;panel-title&quot;</span>&gt;Categories&lt;/h3&gt;
</span><span class='line'>  &lt;/div&gt;
</span><span class='line'>  &lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;list-group&quot;</span>&gt;
</span><span class='line'>    <span class="o">{</span>% <span class="k">for </span>category in site.categories %<span class="o">}</span>
</span><span class='line'>    <span class="o">{</span>% capture category_url %<span class="o">}</span>/<span class="o"></span>/<span class="o">{</span>% endcapture %<span class="o">}</span>
</span><span class='line'>    &lt;a <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;list-group-item &quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&quot;</span>&gt;
</span><span class='line'>        &lt;span <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;badge&quot;</span>&gt;<span class="o"></span>&lt;/span&gt;
</span><span class='line'>        <span class="o"></span>
</span><span class='line'>      &lt;/a&gt;
</span><span class='line'>    <span class="o">{</span>% endfor %<span class="o">}</span>
</span><span class='line'>  &lt;/div&gt;
</span><span class='line'>&lt;/section&gt;
</span></code></pre></td></tr></table></div></figure>


<h5>source/_includes/custom/asides/tag_cloud.html</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&lt;section <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;panel panel-default&quot;</span>&gt;
</span><span class='line'>  &lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;panel-heading&quot;</span>&gt;
</span><span class='line'>    &lt;h3 <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;panel-title&quot;</span>&gt;Tag cloud&lt;/h3&gt;
</span><span class='line'>  &lt;/div&gt;
</span><span class='line'>  &lt;span <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;tag-cloud&quot;</span>&gt;<span class="o">{</span>% tag_cloud counter:true %<span class="o">}</span>&lt;/span&gt;
</span><span class='line'>&lt;/section&gt;
</span></code></pre></td></tr></table></div></figure>


<p><br>
簡単でした！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressでカテゴリーリストとタグクラウドをサイドメニューに追加する]]></title>
    <link href="http://yoursite.com/blog/2014/09/01/add-category-list-and-tag-list-on-asides/"/>
    <updated>2014-09-01T19:40:34+09:00</updated>
    <id>http://yoursite.com/blog/2014/09/01/add-category-list-and-tag-list-on-asides</id>
    <content type="html"><![CDATA[<h2>デフォルトのサイドメニュー</h2>

<p>Octopressをインストールした直後は、サイドメニューは<code>Recent Posts</code>のみです。</p>

<p><img src="http://yoursite.com/images/add-category-list-asides_01.jpg" alt="" /></p>

<p><br>
そこで<strong>Octopress向けに公開されているプラグインを使ってサイドメニューにカテゴリーリストとタグクラウドを実装</strong>します。</p>

<h2>プラグイン</h2>

<p><a href="https://github.com/jekyll/jekyll">jekyll</a>には、特定コンテンツをHTMLとして生成してあなたのサイトに表示させるための<a href="http://jekyllrb.com/docs/plugins/">プラグイン</a>という仕組みを持っています。そして同時に、多くのプラグインが作成・公開されています。</p>

<p><a href="https://github.com/imathis/octopress">imathis/octopress</a>は<a href="https://github.com/jekyll/jekyll">jekyll</a>のためのフレームワークであり、静的コンテンツ生成にはjekyllを使用しているため、もちろんプラグインを導入することが可能です。</p>

<h2>tokkonopapa/octopress-tagcloud プラグインのインストール</h2>

<p><a href="https://github.com/tokkonopapa/octopress-tagcloud">tokkonopapa/octopress-tagcloud</a>のソースコードをcloneして、<a href="http://jekyllrb.com/docs/plugins/#installing-a-plugin">jekyllプラグインインストール作法</a>に準じてファイルを配布します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git clone git@github.com:tokkonopapa/octopress-tagcloud.git
</span><span class='line'>cp -p octopress-tagcloud/plugins/tag_cloud.rb plugins/
</span><span class='line'>cp -p octopress-tagcloud/source/_includes/custom/asides/* <span class="nb">source</span>/_includes/custom/asides/
</span></code></pre></td></tr></table></div></figure>


<p>jekyllの設定ファイル<code>_config.yml</code>にtokkonopapa/octopress-tagcloud プラグインで生成する静的ファイルをサイドメニューのコンテンツとして使用するための設定を記述します。</p>

<p>Octopressの<code>_config.yml</code>に<code>default_asides:</code>から始まる行があります。<code>default_asides:</code>はサイドメニューに表示するHTMLファイルを配列で記述していきます。</p>

<figure class='code'><figcaption><span>tokkonopapa/octopress-tagcloud configuration (_config.yml)</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">default_asides</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span>
</span><span class='line'>    <span class="nv">asides/recent_posts.html</span><span class="p-Indicator">,</span>
</span><span class='line'>    <span class="nv">custom/asides/category_list.html</span><span class="p-Indicator">,</span>
</span><span class='line'>    <span class="nv">custom/asides/tag_cloud.html</span>
</span><span class='line'><span class="p-Indicator">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>静的ファイルを生成してWebサーバを起動します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake preview
</span><span class='line'>
</span><span class='line'><span class="c"># GitHub Pages等でホスティングさせている場合はデプロイコマンドも実行しましょう</span>
</span><span class='line'>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>これでサイドメニューに以下画像のようなカテゴリーリストとタグクラウドが表示されたはずです。</p>

<p><img src="http://yoursite.com/images/add-category-list-asides_02.jpg" alt="" /></p>

<p><br>
簡単でした!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OctopressのコンテンツデータをGitHub Pagesへdeployしようとしたらrejectedで失敗する件]]></title>
    <link href="http://yoursite.com/blog/2014/08/31/rejected-octopress-deploy-to-github-pages/"/>
    <updated>2014-08-31T21:17:02+09:00</updated>
    <id>http://yoursite.com/blog/2014/08/31/rejected-octopress-deploy-to-github-pages</id>
    <content type="html"><![CDATA[<p><a href="http://octopress.org/">Octopress</a>を<a href="https://pages.github.com/">GitHub pages</a>でホスティングさせているのですが、<strong>GitHubレポジトリへのdeployタスク</strong>が<code>rejected</code>となって失敗してしまうことがあります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>## Pushing generated _deploy website
</span><span class='line'>Enter passphrase for key '/home/maehachi08/.ssh/id_rsa':
</span><span class='line'>To git@github.com:buf-material/buf-material.github.io.git
</span><span class='line'> ! [rejected]        master -&gt; master (non-fast-forward)
</span><span class='line'>error: failed to push some refs to 'git@github.com:buf-material/buf-material.github.io.git'
</span><span class='line'>To prevent you from losing history, non-fast-forward updates were rejected
</span><span class='line'>Merge the remote changes before pushing again.  See the 'Note about
</span><span class='line'>fast-forwards' section of 'git push --help' for details.
</span><span class='line'>
</span><span class='line'>## Github Pages deploy complete
</span><span class='line'>cd -
</span></code></pre></td></tr></table></div></figure>


<h2>暫定対処</h2>

<p>他にも解決方法があるかもしれませんので暫定と思っています。</p>

<p>Octopressの<code>Rakefile</code>に記述されている<strong>deployタスク内で実行されているpushタスクをforceオプションで実行</strong>します。</p>

<p><code>git push</code>コマンドのremoteレポジトリ名の頭に<code>+</code>を付加することでforceオプションと同じ効果を付加できるようです。</p>

<figure class='code'><figcaption><span>diff of Rakefile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">--- a/Rakefile</span>
</span><span class='line'><span class="gi">+++ b/Rakefile</span>
</span><span class='line'><span class="gu">@@ -265,7 +265,7 @@ multitask :push do</span>
</span><span class='line'>     puts &quot;\n## Committing: #{message}&quot;
</span><span class='line'>     system &quot;git commit -m \&quot;#{message}\&quot;&quot;
</span><span class='line'>     puts &quot;\n## Pushing generated #{deploy_dir} website&quot;
</span><span class='line'><span class="gd">-    Bundler.with_clean_env { system &quot;git push origin #{deploy_branch}&quot; }</span>
</span><span class='line'><span class="gi">+    Bundler.with_clean_env { system &quot;git push origin +#{deploy_branch}&quot; }</span>
</span><span class='line'>     puts &quot;\n## Github Pages deploy complete&quot;
</span><span class='line'>   end
</span><span class='line'> end
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress + GitHub Pages = Simple Blog]]></title>
    <link href="http://yoursite.com/blog/2014/07/20/installation_octopress_on_github_pages/"/>
    <updated>2014-07-20T23:49:28+09:00</updated>
    <id>http://yoursite.com/blog/2014/07/20/installation_octopress_on_github_pages</id>
    <content type="html"><![CDATA[<p>いきなりですが、ブログを開設したいと思いました。</p>

<p>VimやMarkdownの勉強も兼ねることができるので、<strong>Octopress + GitHub Pages</strong>で書いてみることにします。</p>

<h2>Octopress</h2>

<p><a href="http://octopress.org/">http://octopress.org/</a></p>

<p><img src="http://yoursite.com/images/octopress_top.jpg" alt="" /></p>

<p><strong><a href="http://octopress.org/">Octopress</a></strong>とは、<a href="https://github.com/jekyll/jekyll">mojombo/jekyll</a>という静的ファイルジェネレータのためのフレームワークです。</p>

<p><strong>jekyll</strong>がMarkdownでの記事作成に対応しているのでエンジニアの方で利用されている方が多いようです。</p>

<ol>
<li> HTML5,レスポンシブデザイン対応

<ul>
<li>デフォルトのテンプレートデザインで既にレスポンシブデザイン対応</li>
</ul>
</li>
<li> Compass,Sassを用いたデザイン</li>
<li> 記事の新規作成やローカルレビューなどの操作はrakeタスクに纏まっていてシンプル</li>
<li> ローカルで作成した記事を反映させる方法は、<code>Github pages</code>や<code>Rsync</code>を利用

<ul>
<li><code>Github pages</code>の場合はgithubへpushして更新</li>
</ul>
</li>
<li> <code>POW</code>,<code>WEBrick</code>,<code>thin</code>などのRackサーバをサポート</li>
<li> カラースキームとして<a href="http://ethanschoonover.com/solarized">solarized</a>を採用することで美しいシンタックスハイライトを実現</li>
<li> Markdownで記事を作成可能</li>
</ol>


<h2>GitHub Pages</h2>

<p><a href="https://pages.github.com/">https://pages.github.com/</a></p>

<p><img src="http://yoursite.com/images/github_pages_top.jpg" alt="" /></p>

<p><strong><a href="https://pages.github.com/">GitHub Pages</a></strong>とは、<code>username.github.io</code>というレポジトリに静的コンテンツを置くことでWebサイトとして公開できるものです。
WebサイトのデフォルトURLはレポジトリ名と同じ<code>http://username.github.io</code>となります。
ちなみに、<code>username</code>は自分のGitHubアカウント名に置き換えてください。</p>

<p><strong>GitHub Pages</strong>としてWebページを作成することでコンテンツをGit管理にできるほか、GitHubレポジトリに置けることでバックアップとしての意味合いも果たします。</p>

<p>そして、<strong>GitHub Pages</strong>では静的ファイルジェネレータの<a href="https://github.com/jekyll/jekyll">mojombo/jekyll</a>を使ったブログ作成が可能なので、<strong>Octopress</strong>もインストール可能なのです。</p>

<h2>Octopressをローカル環境にインストール</h2>

<p>今回の最終目標は<strong>GitHub Pages</strong>でOctopressのエントリー記事を表示させることですが、記事作成などの主な操作はローカル環境で行う必要があります(GitHubレポジトリの内容を直接操作することはできない)。ローカル環境で記事作成などの操作を行った後に<code>GitHubへPushする</code>ことで<strong>GitHub Pages</strong>に反映させるのです。</p>

<p>Octopressのソースコードを<code>git clone</code>でローカル環境に持ってきます。
ローカル環境側のRubyバージョンが<code>1.9.3</code>以上の必要があるので、<a href="https://github.com/sstephenson/rbenv">rbenv</a>や<a href="https://github.com/wayneeseguin/rvm">rvm</a>などでインストールしておきます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git clone git@github.com:imathis/octopress.git username.github.io
</span><span class='line'><span class="nb">cd </span>username.github.io
</span></code></pre></td></tr></table></div></figure>


<p>gemモジュール群をインストールします。私の環境では、<code>Could not find a JavaScript runtime</code>エラーが発生するのを防ぐために、<strong>therubyracer</strong>プラグインも一緒にインストールします。</p>

<p><code>Gemfile</code>に追記します。</p>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># for &quot;Could not find a JavaScript runtime&quot; Error</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;therubyracer&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Gemfile</code>に記述されているGemモジュール、および依存関係のあるGemモジュールをインストールします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bundle install
</span></code></pre></td></tr></table></div></figure>


<p><code>rake install</code>コマンドを実行して<strong>Octopress初期セットアップとしてデフォルトテーマ用のファイルをJekyllの静的コンテンツ生成パスにコピー</strong>します。
rakeタスク実行時の標準出力をそのまま記載しているので<code>mkdir</code>や<code>cp</code>はrakeタスク内で実行済みです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake install
</span><span class='line'><span class="c">## Copying classic theme into ./source and ./sass</span>
</span><span class='line'>mkdir -p <span class="nb">source</span>
</span><span class='line'>cp -r .themes/classic/source/. <span class="nb">source</span>
</span><span class='line'>mkdir -p sass
</span><span class='line'>cp -r .themes/classic/sass/. sass
</span><span class='line'>mkdir -p <span class="nb">source</span>/_posts
</span><span class='line'>mkdir -p public
</span></code></pre></td></tr></table></div></figure>


<p>この段階で初期ページの表示確認は可能なはずですので<code>rake preview</code>コマンドを実行して、ローカル環境でWebページを公開します。</p>

<p><code>rake preview</code>コマンドを実行することで<strong>Rakefile内のpreviewタスクを実行</strong>します。previewタスクでは<code>jekyll build --watch</code>コマンドを実行して静的コンテンツをジェネレートしつつ、以降の変更を監視し続けます。変更を検知すると再ジェネレートを自動実行してくれます。そして<code>rackup</code>コマンドを実行し、TCPポート4000番でWEBrickサーバを起動します。</p>

<p>ここでも<code>rake preview</code>タスクの実行時の標準出力を(_config.ymlパス以外は)そのまま記載します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake preview
</span><span class='line'>Starting to watch <span class="nb">source </span>with Jekyll and Compass. Starting Rack on port 4000
</span><span class='line'><span class="o">[</span>2014-07-22 01:08:53<span class="o">]</span> INFO  WEBrick 1.3.1
</span><span class='line'><span class="o">[</span>2014-07-22 01:08:53<span class="o">]</span> INFO  ruby 2.1.0 <span class="o">(</span>2013-12-25<span class="o">)</span> <span class="o">[</span>x86_64-linux<span class="o">]</span>
</span><span class='line'><span class="o">[</span>2014-07-22 01:08:53<span class="o">]</span> INFO  WEBrick::HTTPServer#start: <span class="nv">pid</span><span class="o">=</span>4585 <span class="nv">port</span><span class="o">=</span>4000
</span><span class='line'>Configuration file: /path/to/username.github.io/_config.yml
</span><span class='line'>&gt;&gt;&gt; Change detected at 01:08:54 to: screen.scss
</span><span class='line'>            Source: <span class="nb">source</span>
</span><span class='line'><span class="nb">       </span>Destination: public
</span><span class='line'>      Generating...
</span><span class='line'>                    <span class="k">done</span>.
</span><span class='line'> Auto-regeneration: enabled
</span><span class='line'>identical public/stylesheets/screen.css
</span></code></pre></td></tr></table></div></figure>


<p>ブラウザで<code>http://localhost:4000</code>(localhostの部分はローカル環境のIPアドレスに置き換えてください)にアクセスすると以下のような初期ページが確認できます。</p>

<p><img src="http://yoursite.com/images/octopress_initial.jpg" alt="" /></p>

<h2>Octopressで指定可能なrakeタスク</h2>

<p>Octopressをインストールする際に<code>rake install</code>コマンドや<code>rake preview</code>コマンドを実行しましたが、<strong>rakeコマンドの後ろに指定したサブコマンドはRakefileに定義されたタスク</strong>に対応しています。</p>

<p>指定可能なrakeタスクは<code>rake -T</code>コマンドで確認できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>rake -T
</span><span class='line'>rake clean                     <span class="c"># Clean out caches: .pygments-cache, .gist-cache, .sass-cache</span>
</span><span class='line'>rake copydot<span class="o">[</span><span class="nb">source</span>,dest<span class="o">]</span>      <span class="c"># copy dot files for deployment</span>
</span><span class='line'>rake deploy                    <span class="c"># Default deploy task</span>
</span><span class='line'>rake gen_deploy                <span class="c"># Generate website and deploy</span>
</span><span class='line'>rake generate                  <span class="c"># Generate jekyll site</span>
</span><span class='line'>rake install<span class="o">[</span>theme<span class="o">]</span>            <span class="c"># Initial setup for Octopress: copies the default theme into the path of Jekyll&#39;s generator</span>
</span><span class='line'>rake integrate                 <span class="c"># Move all stashed posts back into the posts directory, ready for site generation</span>
</span><span class='line'>rake isolate<span class="o">[</span>filename<span class="o">]</span>         <span class="c"># Move all other posts than the one currently being worked on to a temporary stash location (stash) so regenerating the site happens much more quickly</span>
</span><span class='line'>rake list                      <span class="c"># list tasks</span>
</span><span class='line'>rake new_page<span class="o">[</span>filename<span class="o">]</span>        <span class="c"># Create a new page in source/(filename)/index.markdown</span>
</span><span class='line'>rake new_post<span class="o">[</span>title<span class="o">]</span>           <span class="c"># Begin a new post in source/_posts</span>
</span><span class='line'>rake preview                   <span class="c"># preview the site in a web browser</span>
</span><span class='line'>rake push                      <span class="c"># deploy public directory to github pages</span>
</span><span class='line'>rake rsync                     <span class="c"># Deploy website via rsync</span>
</span><span class='line'>rake set_root_dir<span class="o">[</span>dir<span class="o">]</span>         <span class="c"># Update configurations to support publishing to root or sub directory</span>
</span><span class='line'>rake setup_github_pages<span class="o">[</span>repo<span class="o">]</span>  <span class="c"># Set up _deploy folder and deploy branch for Github Pages deployment</span>
</span><span class='line'>rake update_source<span class="o">[</span>theme<span class="o">]</span>      <span class="c"># Move source to source.old, install source theme updates, replace source/_includes/navigation.html with source.old&#39;s navigation</span>
</span><span class='line'>rake update_style<span class="o">[</span>theme<span class="o">]</span>       <span class="c"># Move sass to sass.old, install sass theme updates, replace sass/custom with sass.old/custom</span>
</span><span class='line'>rake watch                     <span class="c"># Watch the site and regenerate when it changes</span>
</span></code></pre></td></tr></table></div></figure>


<h2>記事を投稿する</h2>

<p>新しい記事を投稿するためには<code>rake new_post[title]</code>コマンドを実行します。<code>title</code>部分は任意のタイトル文字を記述します。英字以外だとうまく認識できないケースが考えられるので、ここでは英字で指定します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake new_post<span class="o">[</span>test_post<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>rake new_post[test_post]</code>コマンドで<code>source/_posts/yyyy-mm-dd-test-post.markdown</code>というファイルが作成されます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>vim <span class="nb">source</span>/_posts/yyyy-mm-dd-test-post.markdown
</span></code></pre></td></tr></table></div></figure>


<p>テストのために本文を１行だけ追記しました。</p>

<figure class='code'><figcaption><span>source/_posts/yyyy-mm-dd-test-post.markdown</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>---
</span><span class='line'>layout: post
</span><span class='line'>title: &quot;test_post&quot;
</span><span class='line'>date: yyyy-mm-dd 00:00:00 +0900
</span><span class='line'>comments: true
</span><span class='line'>categories:
</span><span class='line'>---
</span><span class='line'>
</span><span class='line'>テスト投稿です
</span></code></pre></td></tr></table></div></figure>


<p>静的ページを生成します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake generate
</span></code></pre></td></tr></table></div></figure>


<p>サーバを立ち上げます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake preview
</span></code></pre></td></tr></table></div></figure>


<p>ブラウザで<code>http://localhost:4000</code>(localhostの部分はローカル環境のIPアドレスに置き換えてください)にアクセスします。</p>

<p><img src="http://yoursite.com/images/octopress_test_page.jpg" alt="" /></p>

<h2>OctopressをGithub Pagesで表示させる</h2>

<p>今までローカル環境で編集してきたOctopressコードを新規作成した記事と共にGitHubにpushします。</p>

<h3>GitHubレポジトリ作成</h3>

<p>GitHubの新規レポジトリ作成ページにアクセスします。</p>

<p><a href="https://github.com/new">https://github.com/new</a></p>

<p><code>Repository name</code>に<code>username.github.io</code>(usernameは自分のGitHubアカウント名)を指定し、<code>Create repository</code>ボタンをクリックします。</p>

<p><img src="http://yoursite.com/images/create_new_repo.jpg" alt="" /></p>

<h3>ローカル環境にてgitレポジトリの作成</h3>

<p><strong>OctopressでGitHub Pagesを利用する場合のgitレポジトリ作成には<code>setup_github_pages</code>という専用のrakeタスクが用意されています。</strong></p>

<p><code>rake setup_github_pages</code>コマンドを作成したレポジトリのURLと共に実行します。</p>

<ul>
<li>レポジトリのURL例

<ul>
<li><code>git@github.com:your_username/your_username.github.io.git</code></li>
<li><code>https://github.com/your_username/your_username.github.io</code></li>
</ul>
</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake setup_github_pages<span class="o">[</span>git@github.com:username/username.github.io.git<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>GitHub Pagesへ反映</h3>

<p>Octopressで記事などをGitHubへpushする時には<code>deploy</code>タスクを利用します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake deploy
</span></code></pre></td></tr></table></div></figure>


<p>GitHubにpush後10分程度待つと、<code>http://username.github.io</code>で先ほどまでローカル環境で表示できていたOctopressページを表示させることに成功しました。</p>

<h2>ソースをBitbucketで管理</h2>

<p><code>rake deploy</code>コマンドでは、GitHub上に作成されたレポジトリのmasterブランチに<a href="https://github.com/jekyll/jekyll">mojombo/jekyll</a>の静的コンテンツのみがpushされます。そして<code>Gemfile</code>,<code>Rakefile</code>,<code>sassディレクトリ</code>,<code>sourceディレクトリ</code>がレポジトリ管理になっていません。</p>

<p><a href="http://octopress.org/docs/deploying/github/">Deploying to Github Pages</a>では、同一レポジトリに<code>sourceブランチ</code>を作成してソースをcommit、pushするように説明していますが、ソースは公開する必要はないので<strong>Bitbucketで管理</strong>します。</p>

<h3>Bitbucketに新規レポジトリを作成</h3>

<p>Bitbucketの新規レポジトリ作成ページにアクセスします。</p>

<p><a href="https://bitbucket.org/repo/create">https://bitbucket.org/repo/create</a></p>

<p>今回は<code>octopress</code>という名前のレポジトリ`を作成しています。</p>

<p><img src="http://yoursite.com/images/octopress_repo_bitbucket.jpg" alt="" /></p>

<h3>ソースをコミット</h3>

<p><code>Gemfile</code>,<code>Rakefile</code>,<code>sassディレクトリ</code>,<code>sourceディレクトリ</code>などをレポジトリにコミットします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git add -A
</span><span class='line'>git commit -m <span class="s1">&#39;Modify config. Add source and sass&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Bitbucketに作成したレポジトリへpush</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git remote add bitbucket git@bitbucket.org:username/octopress.git
</span><span class='line'>git push -u bitbucket <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure>


<h2>まとめ</h2>

<h3>Octopressのインストール</h3>

<ol>
<li> <a href="https://github.com/imathis/octopress">https://github.com/imathis/octopress</a> からソースコードをclone</li>
<li> <code>rake install</code>を実行して初期セットアップ</li>
<li> <code>rake new_post['blog_title']</code>で新規記事を投稿</li>
<li> <code>rake generate</code>で静的ページを生成</li>
<li> <code>rake preview</code>でlocalhostの4000番ポートでWebサーバを起動</li>
</ol>


<h3>GtiHub PagesでOctopressで生成した静的ページを表示</h3>

<ol>
<li> <a href="https://github.com/new">https://github.com/new</a> で新規レポジトリを作成

<ul>
<li><code>Repository name</code>はusername.github.io(usernameは自分のGitHubアカウント名)</li>
</ul>
</li>
<li> <code>rake setup_github_pages</code>でGitHub pagesを利用するための初期セットアップ</li>
<li> <code>rake deploy</code>でGitHubレポジトリへpush</li>
</ol>


<h3>Bitbucketでソースコード管理</h3>

<ol>
<li> <a href="https://bitbucket.org/repo/create">https://bitbucket.org/repo/create</a> で新規レポジトリを作成</li>
<li> <code>git add -A</code>と<code>git commit</code>でソースコードをコミット</li>
<li> <code>git remote add</code>でBitbucketレポジトリをremote先として追加</li>
<li> <code>git push</code>でBitbucketレポジトリにpush</li>
</ol>

]]></content>
  </entry>
  
</feed>
